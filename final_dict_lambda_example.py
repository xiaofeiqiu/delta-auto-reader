#!/usr/bin/env python3
"""
最终的字典 Lambda 使用示例
Final Dictionary Lambda Usage Example
"""

print("=" * 80)
print("🎯 最终实现：字典 Lambda 变换函数")
print("🎯 Final Implementation: Dictionary Lambda Transform Functions")
print("=" * 80)

print("现在你可以这样使用变换函数:")
print("Now you can use transform functions like this:")
print()

print("# 方式 1: 直接使用字典")
print("# Method 1: Direct dictionary usage")
print("from feature_store_sdk.projection import TRANSFORM_LAMBDAS")
print()
print('transforms = {')
print('    "year": lambda col: TRANSFORM_LAMBDAS["year"](col),')
print('    "month": lambda col: TRANSFORM_LAMBDAS["month"](col),')
print('    "day": lambda col: TRANSFORM_LAMBDAS["day"](col),')
print('    "upper": lambda col: TRANSFORM_LAMBDAS["upper"](col),')
print('    "lpad": lambda col, length, pad="0": TRANSFORM_LAMBDAS["lpad"](col, length, pad),')
print('    "nullif": lambda col, value: TRANSFORM_LAMBDAS["nullif"](col, value),')
print('    "coalesce": lambda *cols: TRANSFORM_LAMBDAS["coalesce"](*cols)')
print('}')
print()

print("# 使用示例:")
print("# Usage examples:")
print('my_transforms = [')
print('    transforms["year"]("transaction_date"),')
print('    transforms["upper"]("customer_name"),') 
print('    transforms["lpad"]("account_id", 8, "0"),')
print('    transforms["nullif"]("status", "inactive"),')
print('    transforms["coalesce"]("email1", "email2", "emergency_email")')
print(']')
print()

print("=" * 80)
print("# 方式 2: 更简洁的字典定义")
print("# Method 2: More concise dictionary definition")
print("=" * 80)

print("# 直接引用")
print("# Direct reference")
print("from feature_store_sdk.projection import TRANSFORM_LAMBDAS as T")
print()
print("transforms = {")
print('    "year": T["year"],')
print('    "month": T["month"],')
print('    "day": T["day"],')
print('    "upper": T["upper"],')
print('    "lpad": T["lpad"],')
print('    "nullif": T["nullif"],')
print('    "coalesce": T["coalesce"]')
print("}")
print()

print("# 使用:")
print("# Usage:")
print('year_transform = transforms["year"]("date_column")')
print('upper_transform = transforms["upper"]("text_column")')
print('lpad_transform = transforms["lpad"]("id_column", 10, "0")')
print()

print("=" * 80)
print("# 方式 3: 配置驱动")
print("# Method 3: Configuration-driven")
print("=" * 80)

print("# 配置文件格式")
print("# Configuration file format")
print("transform_config = [")
print('    {"func": "year", "args": ["transaction_date"]},')
print('    {"func": "upper", "args": ["customer_name"]},')
print('    {"func": "lpad", "args": ["account_id", 8, "0"]},')
print('    {"func": "nullif", "args": ["status", "inactive"]},')
print('    {"func": "coalesce", "args": ["email1", "email2", "email3"]}')
print("]")
print()

print("# 动态创建变换")
print("# Dynamic transform creation")
print("from feature_store_sdk.projection import TRANSFORM_LAMBDAS")
print()
print("def create_transforms_from_config(config):")
print("    return [")
print("        TRANSFORM_LAMBDAS[item['func']](*item['args'])")
print("        for item in config")
print("    ]")
print()
print("my_transforms = create_transforms_from_config(transform_config)")
print()

print("=" * 80)
print("# 方式 4: 最简化版本")
print("# Method 4: Ultra-simplified version")
print("=" * 80)

print("# 你想要的格式:")
print("# The format you wanted:")
print("from feature_store_sdk.projection import TRANSFORM_LAMBDAS")
print()
print("# 重命名为更短的变量名")
print("# Rename to shorter variable")
print("transforms = TRANSFORM_LAMBDAS")
print()
print("# 现在可以直接使用:")
print("# Now you can use directly:")
print('year_func = transforms["year"]')
print('upper_func = transforms["upper"]')
print('lpad_func = transforms["lpad"]')
print()
print("# 创建变换:")
print("# Create transforms:")
print('my_transforms = [')
print('    year_func("date_col"),')
print('    upper_func("text_col"),')
print('    lpad_func("id_col", 8, "0")')
print(']')
print()

print("=" * 80)
print("🎉 总结 Summary")
print("=" * 80)
print("✅ 实现了 7 个重新定义的函数:")
print("   YEAR, MONTH, DAY, LPAD, NULLIF, UPPER, COALESCE")
print()
print("✅ 提供了 5 种不同的使用方式:")
print("   1. 常规函数: YEAR('date_col')")
print("   2. 函数映射: create_transform('YEAR', 'date_col')")
print("   3. Lambda 函数: year_lambda('date_col')")
print("   4. 超简洁: year('date_col')")
print("   5. 字典 Lambda: TRANSFORM_LAMBDAS['year']('date_col') ⭐")
print()
print("✅ 字典 Lambda 的优势:")
print("   • 所有函数集中在一个字典中")
print("   • 支持动态函数调用")
print("   • 配置驱动的变换创建")
print("   • 代码极其简洁")
print("   • 易于扩展和维护")
print()
print("🎯 现在用户只需要输入函数名和参数即可!")
print("🎯 Now users just need to input function name and parameters!")
print()
print('示例: transforms["year"]("date_col")')
print('示例: transforms["lpad"]("text_col", 10, "0")')
print('示例: transforms["coalesce"]("col1", "col2", "col3")')
print()
print("🚀 实现完成！Perfect implementation!")